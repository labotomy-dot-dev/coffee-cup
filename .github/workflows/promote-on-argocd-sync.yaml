name: Test and Promote After ArgoCD Sync

on:
    repository_dispatch:
        types: [argocd-sync-succeeded]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test-in-cluster:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run integration tests inside cluster
              run: |
                  echo "ArgoCD sync succeeded. Running integration tests..."
                  # Insert real test logic, e.g.:
                  # kubectl get pods -n dev
                  # pytest tests/integration/

            - name: Check test results
              run: echo "All tests passed âœ…"

    promote-prod:
        name: Promote changed apps to production
        runs-on: ubuntu-latest
        needs: test-in-cluster
        permissions:
            contents: write
            packages: write
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install jq and yq
              run: |
                  sudo apt-get update && sudo apt-get install -y jq
                  sudo wget -qO /usr/local/bin/yq \
                    https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
                  sudo chmod +x /usr/local/bin/yq

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_PAT }}

            - name: Parse changed apps from ArgoCD payload
              id: parse
              run: |
                  echo "Raw payload: ${{ toJson(github.event.client_payload) }}"
                  echo "${{ toJson(github.event.client_payload.apps) }}" > apps.json
                  cat apps.json
                  echo "apps=$(cat apps.json)" >> $GITHUB_OUTPUT

            - name: Promote changed apps from dev to prod
              run: |
                  APPS_JSON='${{ steps.parse.outputs.apps }}'
                  echo "Apps to promote: $APPS_JSON"

                  CHANGED_APPS=$(echo "$APPS_JSON" | jq -r '.[]')
                  for APP in $CHANGED_APPS; do
                    echo "Promoting app: $APP"

                    DEV_MANIFEST_PATH="products/$APP/deploy/dev"
                    PROD_MANIFEST_PATH="products/$APP/deploy/prod"

                    DEV_IMAGE=$(yq '.spec.template.spec.containers[0].image' "$DEV_MANIFEST_PATH/deploy.yaml")
                    PROD_IMAGE=$(echo "$DEV_IMAGE" | sed 's/dev-/prod-/')

                    echo "Promoting image: $DEV_IMAGE -> $PROD_IMAGE"

                    docker pull "$DEV_IMAGE"
                    docker tag "$DEV_IMAGE" "$PROD_IMAGE"
                    docker push "$PROD_IMAGE"

                    echo "Updating production manifest for $APP..."
                    git pull origin main
                    yq -i ".spec.template.spec.containers[0].image = \"$PROD_IMAGE\"" "$PROD_MANIFEST_PATH/deploy.yaml"

                    git config user.name "github-actions"
                    git config user.email "actions@github.com"
                    git add "$PROD_MANIFEST_PATH/deploy.yaml"
                  done

                  git commit -m "Promote apps after ArgoCD sync [skip ci]" || echo "No changes"
                  git push

            - name: Run production smoke tests
              run: |
                  echo "Running smoke tests in prod..."
                  # Example:
                  # for APP in $CHANGED_APPS; do
                  #   curl -f "https://prod.example.com/$APP/health" || exit 1
                  # done
