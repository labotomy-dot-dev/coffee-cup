name: Test and Promote After ArgoCD Sync

on:
    repository_dispatch:
        types: [argocd-sync-succeeded]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test-in-cluster:
        runs-on: ubuntu-latest
        steps:
            - name: Print ArgoCD webhook payload
              run: |
                  echo "App: ${{ github.event.client_payload.app }}"
                  echo "Project: ${{ github.event.client_payload.project }}"
                  echo "Revision: ${{ github.event.client_payload.revision }}"
                  echo "âœ… Argo CD finished syncing successfully!"

            - name: Run integration tests in cluster
              run: |
                  echo "Running post-sync tests for app ${{ github.event.client_payload.app }} in dev cluster..."
                  # Example:
                  # kubectl -n dev rollout status deploy/${{ github.event.client_payload.app }}
                  # pytest tests/integration/${{ github.event.client_payload.app }}/

    promote-prod:
        name: Promote to production
        runs-on: ubuntu-latest
        needs: test-in-cluster
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install jq and yq
              run: |
                  sudo apt-get update && sudo apt-get install -y jq
                  sudo wget -qO /usr/local/bin/yq \
                    https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
                  sudo chmod +x /usr/local/bin/yq

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_PAT }}

            - name: Promote the app to production
              run: |
                  APP="${{ github.event.client_payload.app }}"
                  echo "Promoting app: $APP"

                  DEV_MANIFEST_PATH="products/$APP/deploy/dev"
                  PROD_MANIFEST_PATH="products/$APP/deploy/prod"

                  DEV_IMAGE=$(yq '.spec.template.spec.containers[0].image' "$DEV_MANIFEST_PATH/deploy.yaml")
                  PROD_IMAGE=$(echo "$DEV_IMAGE" | sed 's/dev-/prod-/')

                  echo "Promoting image: $DEV_IMAGE -> $PROD_IMAGE"

                  docker pull "$DEV_IMAGE"
                  docker tag "$DEV_IMAGE" "$PROD_IMAGE"
                  docker push "$PROD_IMAGE"

                  echo "Updating production manifest..."
                  git pull origin main
                  yq -i ".spec.template.spec.containers[0].image = \"$PROD_IMAGE\"" "$PROD_MANIFEST_PATH/deploy.yaml"

                  git config user.name "github-actions"
                  git config user.email "actions@github.com"
                  git add "$PROD_MANIFEST_PATH/deploy.yaml"
                  git commit -m "Promote $APP to prod [skip ci]" || echo "No changes to commit"
                  git push

            - name: Run production smoke test
              run: |
                  echo "Running smoke test for ${{ github.event.client_payload.app }}..."
                  # curl -f "https://prod.example.com/${{ github.event.client_payload.app }}/health" || exit 1
