name: Build, Test, and Deploy Coffee-Cup

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEV_TAG: dev-${{ github.run_number }}
  PROD_TAG: prod-${{ github.run_number }}
  DEV_MANIFEST_PATH: products/coffee-cup/deploy/dev
  PROD_MANIFEST_PATH: products/coffee-cup/deploy/prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Detect changes in src
        id: check_src
        run: |
          if git diff --quiet HEAD^ HEAD -- $SRC_PATH; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      - name: Install yq
        if: steps.check_src.outputs.changed == 'true'
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Set up Docker Buildx
        if: steps.check_src.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.check_src.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push dev image
        if: steps.check_src.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./products/coffee-cup/src
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEV_TAG }}

      - name: Update dev manifests with new image tag
        if: steps.check_src.outputs.changed == 'true'
        run: |
          echo "Updating image tag in dev manifests..."
          yq -i ".spec.template.spec.containers[0].image = \"$REGISTRY/$IMAGE_NAME:$DEV_TAG\"" \
            $DEV_MANIFEST_PATH/deploy.yaml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add $DEV_MANIFEST_PATH/deploy.yaml
          git commit -m "Update dev image tag to $DEV_TAG [skip ci]" || echo "No changes"
          git push
  test-in-cluster:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Run integration tests inside cluster
        run: echo "Running tests in dev cluster..."

      - name: Check test results
        run: echo "All tests passed âœ…"

  promote-prod:
    name: Promote to production
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect changes in dev manifests
        id: check_dev
        run: |
          if git diff --quiet HEAD^ HEAD -- $DEV_MANIFEST_PATH; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run dev smoke tests
        if: steps.check_dev.outputs.changed == 'true'
        run: |
          echo "Running smoke tests on dev..."
          # kubectl exec or curl health checks

      - name: Retag and push prod image
        if: steps.check_dev.outputs.changed == 'true'
        run: |
          docker pull $IMAGE:${DEV_TAG}
          docker tag $IMAGE:${DEV_TAG} $IMAGE:${PROD_TAG}
          echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $IMAGE:${PROD_TAG}

      - name: Update prod manifests
        if: steps.check_dev.outputs.changed == 'true'
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq e -i ".spec.template.spec.containers[0].image = \"${IMAGE}:${PROD_TAG}\"" $PROD_MANIFEST_PATH/deploy.yaml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add $PROD_MANIFEST_PATH/deploy.yaml
          git commit -m "Promote Coffee-Cup to prod ($PROD_TAG)" || echo "No changes to commit"
          git push || echo "Push skipped (no changes)"

      - name: Run production smoke tests
        if: steps.check_dev.outputs.changed == 'true'
        run: |
          echo "Running smoke tests in prod..."
          # kubectl exec or curl checks

      - name: Rollback on failure
        if: failure() && steps.check_dev.outputs.changed == 'true'
        run: |
          echo "Smoke tests failed! Performing rollback..."
          git revert HEAD -m 1 || echo "Nothing to revert"
          git push || echo "Push skipped (rollback)"
