name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEV_TAG: dev-${{ github.run_number }}
  PROD_TAG: prod-${{ github.run_number }}
  DEV_MANIFEST_PATH: gitops/products/apps/dev
  PROD_MANIFEST_PATH: gitops/products/apps/prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "Logging in to GitHub Container Registry..."

      - name: Build container image
        run: echo "Building Docker image $REGISTRY/$IMAGE_NAME:$DEV_TAG..."

      - name: Push image to registry
        run: echo "Pushing image $REGISTRY/$IMAGE_NAME:$DEV_TAG to GitHub registry..."

      - name: Update Kubernetes manifests for dev
        run: |
          echo "Updating image tag in $DEV_MANIFEST_PATH to $DEV_TAG..."
          echo "git add, commit and push changes to the same repo..."

      - name: Push updated manifests
        run: echo "Pushing updated manifests to GitOps repo (triggers ArgoCD sync)..."

  test-in-cluster:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Run integration tests inside cluster
        run: echo "Running tests in dev cluster..."

      - name: Check test results
        run: echo "All tests passed ✅"

  promote-to-prod:
    runs-on: ubuntu-latest
    needs: test-in-cluster
    steps:
      - name: Retag image for production
        run: echo "Tagging $REGISTRY/$IMAGE_NAME:$DEV_TAG as $PROD_TAG..."

      - name: Push production tag
        run: echo "Pushing image $REGISTRY/$IMAGE_NAME:$PROD_TAG to registry..."

      - name: Render prod manifests
        run: |
          echo "Replacing image tag in $PROD_MANIFEST_PATH with $PROD_TAG..."
          echo "Committing and pushing to repo..."

      - name: Deploy to production
        run: echo "Triggering ArgoCD sync or applying manifests to prod cluster..."

  smoke-test:
    runs-on: ubuntu-latest
    needs: promote-to-prod
    steps:
      - name: Run smoke tests
        run: echo "Running smoke tests against production..."

      - name: Verify smoke test results
        id: smoke
        run: echo "Smoke tests passed ✅" # or exit 1 on failure

  notify-or-rollback:
    runs-on: ubuntu-latest
    needs: smoke-test
    if: always()
    steps:
      - name: Check previous step result
        run: |
          echo "Checking smoke test result..."
          echo "If success: notify Slack, if failure: rollback to previous image version..."

      - name: Notify success
        if: success()
        run: echo "✅ Deployment succeeded. Notifying team..."

      - name: Rollback deployment
        if: failure()
        run: echo "❌ Smoke tests failed! Rolling back deployment..."
