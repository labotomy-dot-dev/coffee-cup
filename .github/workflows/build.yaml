name: Build and Deploy Changed Apps

on:
  push:
    branches:
      - main
    paths:
      - "products/*/src/**"
      - ".github/workflows/build-monorepo.yaml"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.detect.outputs.apps }}
      changed: ${{ steps.detect.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changed apps
        id: detect
        run: |
          git fetch --depth=2 origin refs/heads/main

          if [ "$(git rev-list --count HEAD)" -eq 1 ]; then
            echo "First commit detected. Building all apps."
            CHANGED_APPS=$(ls products)
          else
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
            CHANGED_APPS=$(echo "$CHANGED_FILES" | grep '^products/' | cut -d'/' -f2 | sort -u)
          fi

          if [ -z "$CHANGED_APPS" ]; then
            echo "No app changes detected."
            echo "apps=[]" >> $GITHUB_OUTPUT
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Detected changed apps: $CHANGED_APPS"
            APPS_JSON=$(echo "$CHANGED_APPS" | jq -R -s -c 'split("\n")[:-1]')
            echo "apps=$APPS_JSON" >> $GITHUB_OUTPUT
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs: detect
    if: ${{ needs.detect.outputs.changed == 'true' }}
    runs-on: ubuntu-latest

    # Create one job per app
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect.outputs.apps) }}
      fail-fast: false

    name: Build & Deploy ${{ matrix.app }}

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push image for ${{ matrix.app }}
        run: |
          APP="${{ matrix.app }}"
          SRC_PATH="products/$APP/src"
          DEV_MANIFEST_PATH="products/$APP/deploy/dev"
          TAG="dev-${{ github.run_number }}"
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$APP:$TAG"

          echo "Building $IMAGE..."
          docker buildx build "$SRC_PATH" --push --tag "$IMAGE"

          echo "Updating manifest for $APP..."
          yq -i ".spec.template.spec.containers[0].image = \"$IMAGE\"" \
            "$DEV_MANIFEST_PATH/deploy.yaml"

          git pull origin main
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add "$DEV_MANIFEST_PATH/deploy.yaml"
          git commit -m "Update $APP dev image to $TAG [skip ci]" || echo "No changes to commit"
          git push
