name: Rollback After ArgoCD Sync Failure

on:
  repository_dispatch:
    types: [argocd-sync-failed]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  rollback:
    name: Rollback failed ArgoCD app
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print failure payload
        run: |
          echo "‚ùå ArgoCD sync failed!"
          echo "App: ${{ github.event.client_payload }}"

      - name: Normalize app name
        id: normalize
        shell: bash
        run: |
          ARGO_APP="${{ github.event.client_payload.app }}"
          APP_BASE=$(echo "$ARGO_APP" | sed -E 's/-[^-]+$//')
          echo "Normalized app name: $APP_BASE"
          echo "app_base=$APP_BASE" >> $GITHUB_OUTPUT

      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Rollback to previous image version
        shell: bash
        env:
          APP_BASE: ${{ steps.normalize.outputs.app_base }}
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        run: |
          PROD_MANIFEST="products/$APP_BASE/deploy/prod/deploy.yaml"

          if [ ! -f "$PROD_MANIFEST" ]; then
            echo "‚ùå Manifest not found at $PROD_MANIFEST"
            exit 1
          fi

          # Extract current prod image
          CURRENT_IMAGE=$(yq e -r '.spec.template.spec.containers[0].image' "$PROD_MANIFEST")
          echo "Current prod image: $CURRENT_IMAGE"

          # Extract numeric version (assumes tag like prod-28)
          VERSION_NUMBER=$(echo "$CURRENT_IMAGE" | sed -E 's/.*:prod-([0-9]+)$/\1/')
          if [[ -z "$VERSION_NUMBER" ]]; then
            echo "‚ö†Ô∏è Could not parse version from current image. Skipping rollback."
            exit 1
          fi

          # Compute previous version
          PREV_VERSION=$((VERSION_NUMBER - 1))
          if (( PREV_VERSION < 0 )); then
            echo "‚ö†Ô∏è No previous version exists. Skipping rollback."
            exit 0
          fi

          # Build previous image name
          PREV_IMAGE="${CURRENT_IMAGE/:prod-/:prod-$PREV_VERSION}"
          echo "Rolling back to image: $PREV_IMAGE"

          # Update prod manifest
          yq e -i ".spec.template.spec.containers[0].image = \"$PREV_IMAGE\"" "$PROD_MANIFEST"

          # Commit and push changes
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add "$PROD_MANIFEST"
          git commit -m "Rollback $APP_BASE to previous version $PREV_IMAGE [skip ci]" || echo "No changes to commit"
          git push

          echo "‚úÖ Rollback applied successfully"

      # - name: Notify failure in logs
      #   run: |
      #     echo "üì£ Notify team: ArgoCD sync failed for app ${{ github.event.client_payload.app }}"
      #     # Example integration:
      #     # curl -X POST -H 'Content-type: application/json' \
      #     #   --data '{"text":"ArgoCD sync failed for app ${{ github.event.client_payload.app }}. Rollback triggered."}' \
      #     #   ${{ secrets.SLACK_WEBHOOK_URL }}
